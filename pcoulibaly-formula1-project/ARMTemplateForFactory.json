{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pcoulibaly-formula1-project"
		},
		"datakind_test_ls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'datakind_test_ls'"
		},
		"ls_formula1_databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_formula1_databricks'"
		},
		"ls_formula1_storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_formula1_storage'"
		},
		"ls_injectionsa_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_injectionsa'"
		},
		"ls_IPC_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://map.ipcinfo.org/api/public/"
		},
		"ls_fewsData_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://fdw.fews.net/api/marketpricefacts/"
		},
		"ls_fewsDataKenFoodSecurity_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://fdw.fews.net/api/ipcpackage/?country_code=KE&collection_date="
		},
		"ls_fewsDataSomFoodSecurity_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://fdw.fews.net/api/ipcpackage/?country_code=SO&collection_date="
		},
		"ls_formula1_databricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0726-155654-d94drhe8"
		},
		"ls_hotosm_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://export.hotosm.org/downloads/"
		},
		"ls_humData_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.humdata.org/dataset/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_KenFoodInsecuritySrc",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_targetXLSX_binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenFoodInsecuritySrc')]",
				"[concat(variables('factoryId'), '/datasets/ds_targetXLSX_binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "admin1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "admin1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "admin2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "admin2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "market",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "market",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "latitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "latitude",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "longitude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "longitude",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "commodity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "commodity",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "unit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "unit",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "priceflag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "priceflag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "pricetype",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "pricetype",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "currency",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "currency",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "usdprice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "usdprice",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_KenfoodPricesSrc",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_KenFoodPrices_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenfoodPricesSrc')]",
				"[concat(variables('factoryId'), '/datasets/ds_KenFoodPrices_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_KenHealthFacilitiesExcel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_HealthFacilities_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenHealthFacilitiesExcel')]",
				"[concat(variables('factoryId'), '/datasets/ds_HealthFacilities_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_KenFoodPrices')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_KenfoodPricesSrc",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_KenFoodPrices_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "KenFoodPricesDF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"Filename": "KenFoodPrices"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Dataoutput": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenfoodPricesSrc')]",
				"[concat(variables('factoryId'), '/datasets/ds_KenFoodPrices_target')]",
				"[concat(variables('factoryId'), '/dataflows/KenFoodPricesDF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_KenftsFundingClusterSrc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_KenftsFundingClusterSrc",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_KenftsFundingCluster_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "KenftsFundingClusterDF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenftsFundingClusterSrc')]",
				"[concat(variables('factoryId'), '/datasets/ds_KenftsFundingCluster_target')]",
				"[concat(variables('factoryId'), '/dataflows/KenftsFundingClusterDF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ds_KenftsFundingGlobalClusterSrc')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_KenftsFundingGlobalClusterSrc",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_KenftsFundingGlobalCluster_target",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "KenftsFundingGlobalCluster",
								"type": "DataFlowReference",
								"datasetParameters": {
									"ds_KenftsFundingGlobalCluster_target": {},
									"UserQuerypqKenftsFundingGlobalCluster": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQuerypqKenftsFundingGlobalCluster",
											"dataset": {
												"referenceName": "pq_KenftsFundingGlobalCluster",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQuerypqKenftsFundingGlobalCluster"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenftsFundingGlobalClusterSrc')]",
				"[concat(variables('factoryId'), '/datasets/ds_KenftsFundingGlobalCluster_target')]",
				"[concat(variables('factoryId'), '/dataflows/KenftsFundingGlobalCluster')]",
				"[concat(variables('factoryId'), '/datasets/pq_KenftsFundingGlobalCluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_formula1_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingest Race File",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "00.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/pcoulibaly@valorem.com/formula1/Ingestion/2.Ingest_race_file"
						},
						"linkedServiceName": {
							"referenceName": "ls_formula1_databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Folder Details",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "00.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_formula1_raw",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "If Folder Exists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Folder Details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Folder Details').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Circuits File",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "00.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/pcoulibaly@valorem.com/formula1/Ingestion/1.Ingest_circuits_file"
									},
									"linkedServiceName": {
										"referenceName": "ls_formula1_databricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"v_data_source": {
						"type": "String",
						"defaultValue": "Ergast"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_formula1_databricks')]",
				"[concat(variables('factoryId'), '/datasets/ds_formula1_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KenftsFundingGlobalCluster_dfsink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "KenftsFundingGlobalClusterdfsink",
						"folderPath": "target",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "admin1",
						"type": "String"
					},
					{
						"name": "market",
						"type": "String"
					},
					{
						"name": "latitude",
						"type": "String"
					},
					{
						"name": "longitude",
						"type": "String"
					},
					{
						"name": "category",
						"type": "String"
					},
					{
						"name": "commodity",
						"type": "String"
					},
					{
						"name": "unit",
						"type": "String"
					},
					{
						"name": "priceflag",
						"type": "String"
					},
					{
						"name": "pricetype",
						"type": "String"
					},
					{
						"name": "currency",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "usdprice",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Teams')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datakind_test_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "nfl_teams",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "nfl_teams.xls",
						"folderPath": "NFL",
						"container": "datakind"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "team_name",
						"type": "String"
					},
					{
						"name": "team_name_short",
						"type": "String"
					},
					{
						"name": "team_id",
						"type": "String"
					},
					{
						"name": "team_id_pfr",
						"type": "String"
					},
					{
						"name": "team_conference",
						"type": "String"
					},
					{
						"name": "team_division",
						"type": "String"
					},
					{
						"name": "team_conference_pre2002",
						"type": "String"
					},
					{
						"name": "team_division_pre2002",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datakind_test_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_HealthFacilities_dfTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "KenHealthFacilitiesTarget",
						"folderPath": "target",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_HealthFacilities_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "KenHealthFacilities",
						"folderPath": "target",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Code",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Registration_number",
						"type": "String"
					},
					{
						"name": "Keph level",
						"type": "String"
					},
					{
						"name": "Facility type",
						"type": "String"
					},
					{
						"name": "Owner",
						"type": "String"
					},
					{
						"name": "Regulatory body",
						"type": "String"
					},
					{
						"name": "Beds",
						"type": "String"
					},
					{
						"name": "Cots",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "Constituency",
						"type": "String"
					},
					{
						"name": "Sub county",
						"type": "String"
					},
					{
						"name": "Ward",
						"type": "String"
					},
					{
						"name": "Operation status",
						"type": "String"
					},
					{
						"name": "Open_whole_day",
						"type": "String"
					},
					{
						"name": "Open_public_holidays",
						"type": "String"
					},
					{
						"name": "Open_weekends",
						"type": "String"
					},
					{
						"name": "Open_late_night",
						"type": "String"
					},
					{
						"name": "Service_names",
						"type": "String"
					},
					{
						"name": "Approved",
						"type": "String"
					},
					{
						"name": "Public visible",
						"type": "String"
					},
					{
						"name": "Closed",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenAdminBoundariesSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya Binary"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "26801642-7088-4149-9605-6ae282897937/resource/bfe30344-5fb4-45dd-b1d1-565690aba5fc/download/ken_adminboundaries_tabulardata.xlsx"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenAdminDivShpSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya Binary"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "2c0b7571-4bef-4347-9b81-b2174c13f9ef/resource/03df9cbb-0b4f-4f22-9eb7-3cbd0157fd3d/download/ken_adm_iebc_20191031_shp.zip"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenFoodInsecuritySrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_IPC",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya Binary"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "population-tracking-tool/data/2017,2022/?export=true&condition=A&country=KE"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_IPC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenFoodPrices_df_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "KenFoodPrices",
						"folderPath": "target",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "admin1",
						"type": "String"
					},
					{
						"name": "admin2",
						"type": "String"
					},
					{
						"name": "market",
						"type": "String"
					},
					{
						"name": "latitude",
						"type": "String"
					},
					{
						"name": "longitude",
						"type": "String"
					},
					{
						"name": "category",
						"type": "String"
					},
					{
						"name": "commodity",
						"type": "String"
					},
					{
						"name": "unit",
						"type": "String"
					},
					{
						"name": "priceflag",
						"type": "String"
					},
					{
						"name": "pricetype",
						"type": "String"
					},
					{
						"name": "currency",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "usdprice",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenFoodPrices_dfsink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string",
						"defaultValue": "KenFoodPrices"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "part-00000-c3f583ab-e75f-4ba3-b1c6-5d017b15debe-c000.csv",
						"folderPath": "target",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenFoodPrices_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "KenFoodPrices",
						"folderPath": "target",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenFoodSecurityShpSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_fewsDataKenFoodSecurity",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya Binary"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_fewsDataKenFoodSecurity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenHealthFacilitiesExcel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "7b9c2851-dc37-4a88-9dcb-62e55eb91baf/resource/df6bfc55-3b25-4309-a1b4-74afba434956/download/kenya-health-facilities-2017_08_02.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenHealthIndicatorsSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "e849a312-8962-4595-ace8-500484490569/resource/daa8e9e1-4013-4075-a625-149317412a56/download/health_ken.csv/"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenPopulationStatistics2019Src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya Binary"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "26801642-7088-4149-9605-6ae282897937/resource/e57fb9a8-96dc-4a21-849b-1ddbc4ed7803/download/ken_admpop_2019.xlsx"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenRoadsSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_hotosm",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya Binary"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "6b3f8c4a-589d-4537-99e4-1518937c23a8/hotosm_ken_roads_lines_shp.zip"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_hotosm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenfoodPricesSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "e0d3fba6-f9a2-45d7-b949-140c455197ff/resource/517ee1bf-2437-4f8c-aa1b-cb9925b9d437/download/wfp_food_prices_ken.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenftsFundingClusterSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "d0bf93aa-bc16-426b-b53b-c8c90fac98a4/resource/5b10afe9-cd6d-4dcf-9514-52890b3a776e/download/fts_requirements_funding_cluster_ken.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenftsFundingCluster_dfsink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "KenftsFundingCluster_dfsink",
						"folderPath": "target",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenftsFundingCluster_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "KenftsFundingCluster",
						"folderPath": "target",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "countryCode",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "code",
						"type": "String"
					},
					{
						"name": "startDate",
						"type": "String"
					},
					{
						"name": "endDate",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "clusterCode",
						"type": "String"
					},
					{
						"name": "cluster",
						"type": "String"
					},
					{
						"name": "requirements",
						"type": "String"
					},
					{
						"name": "funding",
						"type": "String"
					},
					{
						"name": "percentFunded",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenftsFundingGlobalClusterSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "d0bf93aa-bc16-426b-b53b-c8c90fac98a4/resource/b6136d9e-24a4-4864-adbc-adef30e62516/download/fts_requirements_funding_globalcluster_ken.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenftsFundingGlobalCluster_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ds_KenftsFundingGlobalCluster",
						"folderPath": "target",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "countryCode",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "code",
						"type": "String"
					},
					{
						"name": "startDate",
						"type": "String"
					},
					{
						"name": "endDate",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "clusterCode",
						"type": "String"
					},
					{
						"name": "cluster",
						"type": "String"
					},
					{
						"name": "requirements",
						"type": "String"
					},
					{
						"name": "funding",
						"type": "String"
					},
					{
						"name": "percentFunded",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenftsIncomingFundingSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "d0bf93aa-bc16-426b-b53b-c8c90fac98a4/resource/da2fbb4e-126c-4c98-9cdc-f74f953f96d7/download/fts_incoming_funding_ken.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenftsReqFundingCovidSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "d0bf93aa-bc16-426b-b53b-c8c90fac98a4/resource/3a313ca0-e283-4763-8ef4-0efeaeeb671f/download/fts_requirements_funding_covid_ken.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_KenftsReqFundingSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_humData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Kenya"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "d0bf93aa-bc16-426b-b53b-c8c90fac98a4/resource/a1273a2a-7fa5-4233-8ba5-d756abc2baee/download/fts_requirements_funding_ken.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_humData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_formula1_raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_formula1_storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "circuits",
						"folderPath": "pcoulibaly/raw",
						"container": "training"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_formula1_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_targetXLSX_binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ds_targetXLSX_binary",
						"folderPath": "target",
						"container": "datakind"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pq_KenftsFundingGlobalCluster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_injectionsa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "KenftsFundingGlobalClusterPQ",
						"folderPath": "target",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_injectionsa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/teams_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datakind_test_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "NFL",
						"container": "datakind"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/datakind_test_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datakind_test_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('datakind_test_ls_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_IPC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_IPC_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_fewsData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_fewsData_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_fewsDataKenFoodSecurity')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_fewsDataKenFoodSecurity_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_fewsDataSomFoodSecurity')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_fewsDataSomFoodSecurity_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_formula1_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-5581308756448140.0.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_formula1_databricks_accessToken')]"
					},
					"existingClusterId": "[parameters('ls_formula1_databricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_formula1_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_formula1_storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_hotosm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_hotosm_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_humData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_humData_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_injectionsa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_injectionsa_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_KenFoodPrices')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_KenFoodPrices",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 15,
						"startTime": "2022-12-21T08:23:00",
						"timeZone": "Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_KenFoodPrices')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KenFoodPrices')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ds_KenFoodPrices_df_target",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ds_KenFoodPrices_df_target",
							"dataset": {
								"referenceName": "ds_KenFoodPrices_df_target",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared ds_KenFoodPrices_df_target = let AdfDoc = AzureStorage.BlobContents(\"https://pcoulibalystorageaccount.blob.core.windows.net/datakind/target/KenFoodPrices\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared UserQuery = let Source = #\"ds_KenFoodPrices_df_target\",\r\n  #\"Removed top rows\" = Table.Skip(Source, 1) in #\"Removed top rows\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenFoodPrices_df_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KenFoodPricesDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_KenFoodPrices_df_target",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_KenFoodPrices_dfsink",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to ds_KenFoodPrices_dfsink. This is because HTTP won't work with dataflow. So the data sink from pipeline2 is used in the DF for transformation purposes and then sent to the same sink with a different name"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          date as string,",
						"          admin1 as string,",
						"          admin2 as string,",
						"          market as string,",
						"          latitude as string,",
						"          longitude as string,",
						"          category as string,",
						"          commodity as string,",
						"          unit as string,",
						"          priceflag as string,",
						"          pricetype as string,",
						"          currency as string,",
						"          price as string,",
						"          usdprice as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenFoodPrices_df_target')]",
				"[concat(variables('factoryId'), '/datasets/ds_KenFoodPrices_dfsink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KenHealthFacilities')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_HealthFacilities_target",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_HealthFacilities_dfTarget",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Code as string,",
						"          Name as string,",
						"          Registration_number as string,",
						"          {Keph level} as string,",
						"          {Facility type} as string,",
						"          Owner as string,",
						"          {Regulatory body} as string,",
						"          Beds as string,",
						"          Cots as string,",
						"          County as string,",
						"          Constituency as string,",
						"          {Sub county} as string,",
						"          Ward as string,",
						"          {Operation status} as string,",
						"          Open_whole_day as string,",
						"          Open_public_holidays as string,",
						"          Open_weekends as string,",
						"          Open_late_night as string,",
						"          Service_names as string,",
						"          Approved as string,",
						"          {Public visible} as string,",
						"          Closed as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 filter(iif(isNull(Code),false(),true())) ~> filter1",
						"filter1 derive(Service_Names = iifNull({Service_names}, 'Unknown')) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          each(match(name!='Service_names'))",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_HealthFacilities_target')]",
				"[concat(variables('factoryId'), '/datasets/ds_HealthFacilities_dfTarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KenftsFundingClusterDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_KenftsFundingCluster_target",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_KenftsFundingCluster_dfsink",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to KenftsFundingCluster_dfsink"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "alterRow1",
							"description": "delete first row using countryCode as basis"
						}
					],
					"scriptLines": [
						"source(output(",
						"          countryCode as string,",
						"          id as integer,",
						"          name as string,",
						"          code as string,",
						"          startDate as string,",
						"          endDate as string,",
						"          year as string,",
						"          clusterCode as string,",
						"          cluster as string,",
						"          requirements as string,",
						"          funding as string,",
						"          percentFunded as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 filter(iif(isNull(funding),false(),true())) ~> filter1",
						"filter1 filter(iif(isNull(percentFunded),false(),true())) ~> filter2",
						"filter2 alterRow(deleteIf(countryCode=='#country+code')) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenftsFundingCluster_target')]",
				"[concat(variables('factoryId'), '/datasets/ds_KenftsFundingCluster_dfsink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KenftsFundingGlobalCluster')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ds_KenftsFundingGlobalCluster_target",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ds_KenftsFundingGlobalCluster_target",
							"dataset": {
								"referenceName": "ds_KenftsFundingGlobalCluster_target",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared ds_KenftsFundingGlobalCluster_target = let AdfDoc = AzureStorage.BlobContents(\"https://pcoulibalystorageaccount.blob.core.windows.net/datakind/target/ds_KenftsFundingGlobalCluster\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared UserQuery = let Source = #\"ds_KenftsFundingGlobalCluster_target\",\r\n  #\"Removed top rows\" = Table.Skip(Source, 1) in #\"Removed top rows\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenftsFundingGlobalCluster_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/KenftsFundingGlobalClusterDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_KenftsFundingGlobalCluster_target",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "KenftsFundingGlobalCluster_dfsink",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "Export data to KenftsFundingCluster_dfsink"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          countryCode as string,",
						"          id as string,",
						"          name as string,",
						"          code as string,",
						"          startDate as string,",
						"          endDate as string,",
						"          year as string,",
						"          clusterCode as string,",
						"          cluster as string,",
						"          requirements as string,",
						"          funding as string,",
						"          percentFunded as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          date as string,",
						"          admin1 as string,",
						"          market as string,",
						"          latitude as string,",
						"          longitude as string,",
						"          category as string,",
						"          commodity as string,",
						"          unit as string,",
						"          priceflag as string,",
						"          pricetype as string,",
						"          currency as string,",
						"          price as string,",
						"          usdprice as string",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_KenftsFundingGlobalCluster_target')]",
				"[concat(variables('factoryId'), '/datasets/KenftsFundingGlobalCluster_dfsink')]"
			]
		}
	]
}