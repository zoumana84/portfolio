{
	"name": "KenftsReqFundingDF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "KenftsReqFundingPQ",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_KenftsReqFunding_dfTarget",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          countryCode as string,",
				"          id as short,",
				"          name as string,",
				"          code as string,",
				"          typeId as short,",
				"          typeName as string,",
				"          startDate as date,",
				"          endDate as date,",
				"          year as short,",
				"          requirements as integer,",
				"          funding as integer,",
				"          percentFunded as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 split(contains(array(toString(columns())), isNull(#item)),",
				"     disjoint: false) ~> split1@(Null, Good)",
				"split1@Good sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          countryCode as string,",
				"          id as string,",
				"          name as string,",
				"          code as string,",
				"          startDate as string,",
				"          endDate as string,",
				"          year as string,",
				"          clusterCode as string,",
				"          cluster as string,",
				"          requirements as string,",
				"          funding as string,",
				"          percentFunded as string",
				"     ),",
				"     filePattern:'KenftsReqFunding_dfTarget',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}